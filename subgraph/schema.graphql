type User @entity {
	id: ID! # address

	balance: BigInt! # tokens

	incomingRate: BigInt! # tokens per block
	totalMaxIncomingAmount: BigInt! # tokens
	outgoingRate: BigInt! # tokens per block
	totalMaxOutgoingAmount: BigInt! # tokens

	blockAtLastUpdate: BigInt! # block
	availableAmount: BigInt!

	outgoingSubscriptions: [Subscription!]! @derivedFrom(field: "from")
	incomingSubscriptions: [Subscription!]! @derivedFrom(field: "to")
}

enum SubscriptionStatus {
	UNDEFINED # Subscription not created yet
	ACTIVE # Subscription is active
	STOPPED # Subscription is stopped
	CANCELED # Subscription got canceled by the user
	FINISHED # Subscription finished normally
}

type Subscription @entity {
	id: ID!

	status: SubscriptionStatus!

	token: Bytes! # ERC-20 contract address

	from: User!
	to: User!
	rate: BigInt! # tokens per block
	maxAmount: BigInt! # tokens
	amountPaid: BigInt!

	startBlock: BigInt! # block number
	startTime: BigInt! # timestamp
	endBlock: BigInt # block number (optional)
	endTime: BigInt # timestamp (optional)
}
